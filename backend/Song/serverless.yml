org: salinsuwu
service: song-api

provider:
  name: aws
  runtime: nodejs20.x
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::164273947020:role/LabRole
  environment:
    TABLE_NAME: ${sls:stage}-${env:TABLE_NAME_e}
    INDEX_NAME: ${env:INDEX_NAME_e}

functions:
  getSongById:
    handler: handler/getSongById.handler
    events:
      - http:
          path: /getSongById
          method: post
          cors: true
          integration: lambda

  getSongByTitle:
    handler: handler/getSongByTitle.handler
    events:
      - http:
          path: /getSongByTitle
          method: post
          cors: true
          integration: lambda

  createSong:
    handler: handler/createSong.handler
    events:
      - http:
          path: /song
          method: post
          cors: true
          integration: lambda

  deleteSong:
    handler: handler/deleteSong.handler
    events:
      - http:
          path: /deleteSong
          method: post
          cors: true
          integration: lambda

  getAllSongs:
    handler: handler/getAllSongs.handler
    events:
      - http:
          path: getAllSongs
          method: get
          cors: true
          integration: lambda

resources:
  Resources:
    SongsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: providerId
            AttributeType: S
          - AttributeName: songId
            AttributeType: N
          - AttributeName: title
            AttributeType: S
        KeySchema:
          - AttributeName: providerId
            KeyType: HASH
          - AttributeName: songId
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.INDEX_NAME}
            KeySchema:
              - AttributeName: title
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
